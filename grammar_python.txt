Terminals:
'if' 'while' 'return' 'class' 'def' 'not' 'or' 'False' 'None' 'True' 'and' 'as' 'break' 'continue' 'elif' 'else''from' 'import' 'in' 'is' 'pass' 'raise' 'with' 'object' 'integer' 'float' 'char' 'string' 'bool' '(' ')' 'epsilon'
Variables:
IF WHILE RETURN CLASS DEF NOT OR FALSE NONE TRUE AND AS BREAK CONTINUE ELIF ELSE FROM IMPORT IN IS PASS RAISE WITH OBJECT IMPORT CONDITION EQUATION1 EQUATION2 VAR1 VAR2 SYMBOL1 SYMBOL2 INSIDE CONST INTEGER FLOAT CHAR STRING BOOL ( ) EPSILON COMMAND
Grammar:
S -> FROM OBJECT S | IMPORT OBJECT S | AS OBJECT S | WHILE ( CONDITION ) S : | IF ( CONDITION ) S : | CONST SYMBOL1 CONST S | CONST SYMBOL1 VAR1 S | CONST SYMBOL1 S | VAR1 SYMBOL1 CONST S | VAR1 SYMBOL1 VAR2 S | VAR1 SYMBOL1 S | RETURN CONST S | RETURN VAR S | RETURN BOOL S | RETURN NONE S | RETURN ( CONDITION ) S | DEF FUNCTION ( PARAMETER ) : | VAR1 SYMBOL1 INTEGER S | VAR1 SYMBOL1 CHAR S | VAR1 SYMBOL1 BOOL S | VAR1 SYMBOL1 FLOAT S | VAR1 SYMBOL1 STRING S | ELIF ( CONDITION ) S : | ELSE : S | FOR VAR1 IN RANGE ( CONST ) S : | FOR VAR1 IN RANGE ( VAR2 ) S : | CLASS NAME : S | RAISE EXCEPTION ( STRING ) S | CONTINUE S | BREAK S | PASS S | WITH S | EPSILON;
FROM -> 'from';
IMPORT -> 'import';
AS -> 'as';
OBJECT -> 'object';
WHILE -> 'while';
IF -> 'if';
ELIF -> 'elif';
RETURN -> 'return';
EPSILON -> 'epsilon'
( -> '(';
) -> ')';
: -> ':';
, -> ',';
INTEGER -> 'integer';
CHAR -> 'char';
FLOAT -> 'float';
STRING -> 'A' STRING | 'B' STRING | 'C' STRING | 'D' STRING | 'E' STRING | 'F' STRING | 'G' STRING | 'H' STRING | 'I' STRING | 'J' STRING | 'K' STRING | 'L' STRING | 'M' STRING | 'N' STRING | 'O' STRING | 'P' STRING | 'Q' STRING | 'R' STRING | 'S' STRING | 'T' STRING | 'U' STRING | 'V' STRING | 'W' STRING | 'X' STRING | 'Y' STRING | 'Z' STRING | 'a' STRING | 'b' STRING | 'c' STRING | 'd' STRING | 'e' STRING | 'f' STRING | 'g' STRING | 'h' STRING | 'i' STRING | 'Jj STRING | 'k' STRING | 'l' STRING | 'm' STRING | 'n' STRING | 'o' STRING | 'p' STRING | q' STRING | 'r' STRING | 's' STRING | 't' STRING | 'u' STRING | 'v' STRING | 'w' STRING | 'x' STRING | 'y' STRING | 'z' STRING | 'string' | epsilon;
AND -> 'and';
NOT -> 'not';
OR -> 'or';
FOR -> 'for';
IN -> 'in';
CLASS -> 'class';
BREAK -> 'break';
CONTINUE -> continue;
PASS -> 'pass';
RANGE -> 'range';
WITH -> 'with';
ELSE -> 'else' ;
BOOL -> 'true' | 'false' | 'bool';
NONE -> none;
RAISE -> raise;
EXCEPTION -> 'exception';
SYMBOL1 -> = | + | * | / | -;Terminals:
if while return class def not or False None True and as break continue elif elsefrom import in is pass raise with object integer float char string bool ( ) epsilon
Variables:
IF WHILE RETURN CLASS DEF NOT OR FALSE NONE TRUE AND AS BREAK CONTINUE ELIF ELSE FROM IMPORT IN IS PASS RAISE WITH OBJECT IMPORT CONDITION EQUATION1 EQUATION2 VAR1 VAR2 SYMBOL1 SYMBOL2 INSIDE CONST INTEGER FLOAT CHAR STRING BOOL ( ) EPSILON COMMAND
Grammar:
S -> FROM OBJECT S | IMPORT OBJECT S | AS OBJECT S | WHILE ( CONDITION ) S : | IF ( CONDITION ) S : | CONST SYMBOL1 CONST S | CONST SYMBOL1 VAR1 S | CONST SYMBOL1 S | VAR1 SYMBOL1 CONST S | VAR1 SYMBOL1 VAR2 S | VAR1 SYMBOL1 S | RETURN CONST S | RETURN VAR S | RETURN BOOL S | RETURN NONE S | RETURN ( CONDITION ) S | DEF FUNCTION ( PARAMETER ) : | VAR1 SYMBOL1 INTEGER S | VAR1 SYMBOL1 CHAR S | VAR1 SYMBOL1 BOOL S | VAR1 SYMBOL1 FLOAT S | VAR1 SYMBOL1 STRING S | ELIF ( CONDITION ) S : | ELSE : S | FOR VAR1 IN RANGE ( CONST ) S : | FOR VAR1 IN RANGE ( VAR2 ) S : | CLASS NAME : S | RAISE EXCEPTION ( STRING ) S | CONTINUE S | BREAK S | PASS S | WITH S | EPSILON;
FROM -> from;
IMPORT -> import;
AS -> as;
OBJECT -> object;
WHILE -> while;
IF -> if;
ELIF -> elif;
RETURN -> return;
EPSILON -> epsilon
( -> (;
) -> );
: -> :;
, -> ,;
INTEGER -> integer;
CHAR -> char;
FLOAT -> float;
STRING -> A STRING | B STRING | C STRING | D STRING | E STRING | F STRING | G STRING | H STRING | I STRING | J STRING | K STRING | L STRING | M STRING | N STRING | O STRING | P STRING | Q STRING | R STRING | S STRING | T STRING | U STRING | V STRING | W STRING | X STRING | Y STRING | Z STRING | a STRING | b STRING | c STRING | d STRING | e STRING | f STRING | g STRING | h STRING | i STRING | j STRING | k STRING | l STRING | m STRING | n STRING | o STRING | p STRING | q STRING | r STRING | s STRING | t STRING | u STRING | v STRING | w STRING | x STRING | y STRING | z STRING | string | epsilon;
AND -> and;
NOT -> not;
OR -> or;
FOR -> for;
IN -> in;
CLASS -> class;
BREAK -> break;
CONTINUE -> continue;
PASS -> pass;
RANGE -> range;
WITH -> with;
ELSE -> else ;
BOOL -> true | false | bool;
NONE -> none;
RAISE -> raise;
EXCEPTION -> exception;
SYMBOL1 -> = | + | * | / | -;
SYMBOL2 -> == | != | >= | <= | > | <;
CONDITION -> EQUATION1 | EQUATION2 ;
EQUATION1 -> VAR1 SYMBOL2 VAR2 | VAR1 SYMBOL2 CONST | NOT VAR1;
EQUATION2 -> VAR1 SYMBOL2 VAR2 AND CONDITION | VAR1 SYMBOL2 CONST AND CONDITION | VAR1 SYMBOL2 VAR2 OR CONDITION | VAR1 SYMBOL2 CONST OR CONDITION | NOT VAR1 AND CONDITION;
PARAMETER -> VAR1 , PARAMETER | VAR1 | '';
COMMAND -> # STRING|  STRING 
# -> #
''' -> '''

SYMBOL2 -> == | != | >= | <= | '>' | <;
CONDITION -> EQUATION1 | EQUATION2 ;
EQUATION1 -> VAR1 SYMBOL2 VAR2 | VAR1 SYMBOL2 CONST | NOT VAR1;
EQUATION2 -> VAR1 SYMBOL2 VAR2 AND CONDITION | VAR1 SYMBOL2 CONST AND CONDITION | VAR1 SYMBOL2 VAR2 OR CONDITION | VAR1 SYMBOL2 CONST OR CONDITION | NOT VAR1 AND CONDITION;
PARAMETER -> VAR1 , PARAMETER | VAR1 | '';
COMMAND -> # STRING| ''' STRING '''
# -> '#'
''' -> '''
